// automatically generated by the FlatBuffers compiler, do not modify

package org.modeldd.flatbufferssamples.couplemodels.generated;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")public final class CoupleModelsLine extends Table {
  public static CoupleModelsLine getRootAsCoupleModelsLine(ByteBuffer _bb) { return getRootAsCoupleModelsLine(_bb, new CoupleModelsLine()); }
  public static CoupleModelsLine getRootAsCoupleModelsLine(ByteBuffer _bb, CoupleModelsLine obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public CoupleModelsLine __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte lineType() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public boolean mutateLineType(byte line_type) { int o = __offset(4); if (o != 0) { bb.put(o + bb_pos, line_type); return true; } else { return false; } }
  public Table line(Table obj) { int o = __offset(6); return o != 0 ? __union(obj, o) : null; }

  public static int createCoupleModelsLine(FlatBufferBuilder builder,
      byte line_type,
      int lineOffset) {
    builder.startObject(2);
    CoupleModelsLine.addLine(builder, lineOffset);
    CoupleModelsLine.addLineType(builder, line_type);
    return CoupleModelsLine.endCoupleModelsLine(builder);
  }

  public static void startCoupleModelsLine(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addLineType(FlatBufferBuilder builder, byte lineType) { builder.addByte(0, lineType, 0); }
  public static void addLine(FlatBufferBuilder builder, int lineOffset) { builder.addOffset(1, lineOffset, 0); }
  public static int endCoupleModelsLine(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

